CREATE DATABASE FINAL_CS


SELECT* FROM CUST_DATA
SELECT* FROM TRAN_DATA

SELECT COUNT(CASH_MEMO_NO), COUNT(STORE_ID), COUNT(MCN)
FROM TRAN_DATA
WHERE CASH_MEMO_NO IS NULL OR STORE_ID IS NULL OR MCN IS NULL


DELETE FROM TRAN_DATA 
WHERE CASH_MEMO_NO IS NULL OR STORE_ID IS NULL OR MCN IS NULL


BEGIN TRANSACTION
DELETE FROM TRAN_DATA 
WHERE CASH_MEMO_NO IS NULL OR STORE_ID IS NULL OR MCN IS NULL
ROLLBACK



SELECT* FROM TRAN_DATA


--NEW TABLE
SELECT* INTO FINAL_DATA FROM
(SELECT* FROM TRAN_DATA AS A LEFT JOIN CUST_DATA AS B
ON A.MCN= B.CUSTID1) AS X

SELECT* FROM FINAL_DATA 



--Calculate the discount variable using formula (Discount = TotalAmount-SaleAmount)
SELECT TOTALAMOUNT- SALEAMOUNT AS DISCOUNT
FROM FINAL_DATA

ALTER TABLE FINAL_DATA
ADD DISCOUNT FLOAT

UPDATE FINAL_DATA
SET DISCOUNT = TOTALAMOUNT- SALEAMOUNT


--Q1.Count the number of observations having any of the variables having 
--null value/missing values?

1. SELECT COUNT(*) FROM FINAL_DATA
WHERE ItemCount IS NULL OR
TransactionDate IS NULL OR
TotalAmount IS NULL OR
SALEAMOUNT IS NULL OR
SALEPERCENT IS NULL OR
CASH_MEMO_NO IS NULL OR
DEP1AMOUNT IS NULL OR
DEP2AMOUNT IS NULL OR
DEP3AMOUNT IS NULL OR
DEP4AMOUNT IS NULL OR
STORE_ID IS NULL OR
MCN IS NULL OR
CUSTID IS NULL OR
GENDER IS NULL OR
LOCATION IS NULL OR
AGE IS NULL OR
CUST_SEG IS NULL OR
SAMPLE_FLAG IS NULL OR
CUSTID1 IS NULL



----Q2.How many customers have shopped? (Hint: Distinct Customers)


2. SELECT COUNT(DISTINCT CUSTID) AS CS FROM FINAL_DATA

SELECT* FROM FINAL_DATA

----Q3.How many shoppers (customers) visiting more than 1 store?


3. SELECT COUNT(*) FROM
(SELECT CUSTID AS CUSTOMERS,STORE_ID,COUNT(STORE_ID) AS STORE_VISIT
FROM FINAL_DATA GROUP BY STORE_ID,CUSTID HAVING COUNT(STORE_ID)>1)AS X


---- Q4.What is the distribution of shoppers by day of the week? How the customer shopping behavior on each day of week? 
 --(Hint: You are required to calculate number of customers, number of transactions, total sale amount, total quantity etc.. by each week day)


4. 
SELECT DATENAME(WEEKDAY,TRANSACTIONDATE) AS DAYS,COUNT(DISTINCT CUSTID) AS TOTAL_CUSTOMERS,
COUNT(CASH_MEMO_NO)AS TRANSACTIONS,ROUND(SUM(SALEAMOUNT),2) AS TOTAL_SALES, SUM(ITEMCOUNT) AS QTY
FROM FINAL_DATA 
GROUP BY DATENAME(WEEKDAY,TRANSACTIONDATE)


----Q5.What is the average revenue per customer/average revenue per customer by each location?

5. SELECT CUSTID, ROUND(AVG(SALEAMOUNT),2) AS AVG_REVENUE_PER_CUST 
FROM FINAL_DATA GROUP BY CUSTID


SELECT CUSTID,LOCATION,ROUND(AVG(SALEAMOUNT),2) AS AVG_REVENUE
FROM FINAL_DATA GROUP BY CUSTID,LOCATION ORDER BY LOCATION DESC


----Q6.Average revenue per customer by each store etc?

6. SELECT STORE_ID, CUSTID, AVG(SALEAMOUNT*ITEMCOUNT) AS AVG_REVENUE
FROM FINAL_DATA GROUP BY STORE_ID,CUSTID ORDER BY AVG_REVENUE DESC


----Q7.Find the department spend by store wise?

7.SELECT STORE_ID, 
ROUND(SUM(DEP1AMOUNT),3) AS DEP1,
ROUND(SUM(DEP2AMOUNT),3) AS DEP2,
ROUND(SUM(DEP3AMOUNT),3) AS DEP3,
ROUND(SUM(DEP4AMOUNT),3) AS DEP4
FROM FINAL_DATA GROUP BY STORE_ID


-----Q8. What is the Latest transaction date and Oldest Transaction date? (Finding the minimum and maximum transaction dates)


8. SELECT MAX(TRANSACTIONDATE) AS LATEST_DATE, MIN(TRANSACTIONDATE) AS OLDEST_DATE
FROM FINAL_DATA


----Q9. How many months of data provided for the analysis?



9. SELECT COUNT(MONTHS) AS TOTAL_MONTHS FROM
(SELECT MONTH(TRANSACTIONDATE) AS MONTHS
FROM FINAL_DATA GROUP BY MONTH(TRANSACTIONDATE)) AS S


SELECT DATEDIFF(MONTH,MIN(TRANSACTIONDATE),MAX(TRANSACTIONDATE))+1 AS TOTAL_MONTHS FROM FINAL_DATA


----Q10. Find the top 3 locations interms of spend and total contribution of sales out of total sales? 



10. SELECT TOP 3 LOCATION,SUM(SALEAMOUNT) AS TOTAL_LOC_SPEND,
(SUM(SALEAMOUNT)/SUM(TOTALAMOUNT))*100 AS PERCENTAGE
FROM FINAL_DATA GROUP BY LOCATION ORDER BY TOTAL_LOC_SPEND DESC



----Q11.Find the customer count and Total Sales by Gender?



11. 
SELECT COUNT(DISTINCT CUSTID) AS CUST_COUNT,GENDER,SUM(SALEAMOUNT) AS TOTALSALES
FROM FINAL_DATA GROUP BY GENDER


----Q12. What is total  discount and percentage of discount given by each location? 



12. SELECT LOCATION, SUM(DISCOUNT) AS TOTAL_DISCOUNT,( SUM( DISCOUNT)/ (SUM(TOTALAMOUNT))*100)
AS DISCOUNT_PERCENT FROM FINAL_DATA
WHERE LOCATION IS NOT NULL GROUP BY LOCATION


----Q13. Which segment of customers contributing maximum sales?


13.SELECT TOP 1 CUST_SEG, SUM(SALEAMOUNT) AS SALES
FROM FINAL_DATA GROUP BY CUST_SEG ORDER BY SALES DESC


----Q14. What is the average transaction value by location, gender, segment? !


14.SELECT LOCATION,GENDER,CUST_SEG, AVG(SALEAMOUNT)AS AVG_AMT FROM FINAL_DATA
WHERE LOCATION IS NOT NULL
GROUP BY LOCATION,GENDER,CUST_SEG ORDER BY LOCATION DESC


----Q15. Create Customer_360 Table with below columns.

15. SELECT* INTO CUSTOMER_360 FROM
(SELECT CUSTID AS CUSTOMER_ID,GENDER,LOCATION,AGE,CUST_SEG,COUNT(CASH_MEMO_NO)
AS NO_OF_TRANSACTIONS,SUM(ITEMCOUNT) AS NO_OF_ITEMS,SUM(SALEAMOUNT) AS TOTAL_SALES_AMOUNT,
AVG(SALEAMOUNT) AS AVERAGE_TRANSACTION_VALUE,SUM(DEP1AMOUNT) AS TOTALSPEND_DEP1,
SUM(DEP2AMOUNT) AS TOTALSPEND_DEP2, SUM(DEP3AMOUNT) AS TOTALSPEND_DEP3, SUM(DEP4AMOUNT)
AS TOTALSPEND_DEP4, SUM(CASE WHEN DEP1AMOUNT>0 THEN 1 ELSE 0 END) AS NO_OF_TRANSACTION_DEP1,
 SUM(CASE WHEN DEP2AMOUNT>0 THEN 1 ELSE 0 END) AS NO_OF_TRANSACTION_DEP2,
 SUM(CASE WHEN DEP3AMOUNT>0 THEN 1 ELSE 0 END) AS NO_OF_TRANSACTION_DEP3,
 SUM(CASE WHEN DEP4AMOUNT>0 THEN 1 ELSE 0 END) AS NO_OF_TRANSACTION_DEP4,
 SUM(CASE WHEN FORMAT(TRANSACTIONDATE, 'DDDD') IN ('MONDAY','TUESDAY','WEDNESDAY','THURSDAY','FRIDAY') THEN 1 ELSE 0 END) AS NO_OF_TRANSACTIONS_WEEKDAYS,
 SUM(CASE WHEN FORMAT(TRANSACTIONDATE, 'DDDD') IN ('SATURDAY','SUNDAY') THEN 1 ELSE 0 END) AS NO_OF_TRANSACTIONS_WEEKENDS,
 RANK() OVER (ORDER BY SUM(SALEAMOUNT) DESC) AS RANK_BASED_ON_SPEND,
 NTILE(10) OVER (ORDER BY SUM(SALEAMOUNT) DESC) AS DECILE 
 FROM FINAL_DATA
GROUP BY CUSTID,GENDER,LOCATION, AGE ,CUST_SEG) AS X

SELECT* FROM CUSTOMER_360



